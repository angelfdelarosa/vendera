{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/properties/EditPropertyForm.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const EditPropertyForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call EditPropertyForm() from the server but EditPropertyForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/properties/EditPropertyForm.tsx <module evaluation>\",\n    \"EditPropertyForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,gFACA","debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/properties/EditPropertyForm.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const EditPropertyForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call EditPropertyForm() from the server but EditPropertyForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/properties/EditPropertyForm.tsx\",\n    \"EditPropertyForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,4DACA","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/supabase/server.ts"],"sourcesContent":["\nimport { createServerClient, type CookieOptions } from '@supabase/ssr'\nimport { cookies } from 'next/headers'\n\nexport function createClient() {\n  const cookieStore = cookies()\n\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        get(name: string) {\n          return cookieStore.get(name)?.value\n        },\n        set(name: string, value: string, options: CookieOptions) {\n          try {\n            cookieStore.set({ name, value, ...options })\n          } catch (error) {\n            // The `set` method was called from a Server Component.\n            // This can be ignored if you have middleware refreshing\n            // user sessions.\n          }\n        },\n        remove(name: string, options: CookieOptions) {\n          try {\n            cookieStore.set({ name, value: '', ...options })\n          } catch (error) {\n            // The `delete` method was called from a Server Component.\n            // This can be ignored if you have middleware refreshing\n            // user sessions.\n          }\n        },\n      },\n    }\n  )\n}\n"],"names":[],"mappings":";;;AACA;AAAA;AACA;;;AAEO,SAAS;IACd,MAAM,cAAc,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAE1B,OAAO,CAAA,GAAA,yKAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,YAAY,GAAG,CAAC,OAAO;YAChC;YACA,KAAI,IAAY,EAAE,KAAa,EAAE,OAAsB;gBACrD,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM;wBAAO,GAAG,OAAO;oBAAC;gBAC5C,EAAE,OAAO,OAAO;gBACd,uDAAuD;gBACvD,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;YACA,QAAO,IAAY,EAAE,OAAsB;gBACzC,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM,OAAO;wBAAI,GAAG,OAAO;oBAAC;gBAChD,EAAE,OAAO,OAAO;gBACd,0DAA0D;gBAC1D,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28main%29/edit-property/%5Bid%5D/page.tsx"],"sourcesContent":["\nimport { EditPropertyForm } from '@/components/properties/EditPropertyForm';\nimport { createClient } from '@/lib/supabase/server';\nimport type { Property } from '@/types';\nimport { notFound } from 'next/navigation';\n\nasync function getPropertyForEdit(id: string): Promise<Property | null> {\n    const supabase = createClient();\n    const { data, error } = await supabase\n        .from('properties')\n        .select(`*, realtor:realtor_id(user_id, full_name, avatar_url, username)`)\n        .eq('id', id)\n        .single();\n\n    if (error || !data) {\n        console.error('Error fetching property for edit page:', error);\n        return null;\n    }\n\n    return data as unknown as Property;\n}\n\n\nexport default async function EditPropertyPage({ params }: { params: { id: string } }) {\n    const property = await getPropertyForEdit(params.id);\n\n    if (!property) {\n        notFound();\n    }\n\n    return <EditPropertyForm property={property} />;\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAEA;AAAA;;;;;AAEA,eAAe,mBAAmB,EAAU;IACxC,MAAM,WAAW,CAAA,GAAA,gIAAA,CAAA,eAAY,AAAD;IAC5B,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SACzB,IAAI,CAAC,cACL,MAAM,CAAC,CAAC,+DAA+D,CAAC,EACxE,EAAE,CAAC,MAAM,IACT,MAAM;IAEX,IAAI,SAAS,CAAC,MAAM;QAChB,QAAQ,KAAK,CAAC,0CAA0C;QACxD,OAAO;IACX;IAEA,OAAO;AACX;AAGe,eAAe,iBAAiB,EAAE,MAAM,EAA8B;IACjF,MAAM,WAAW,MAAM,mBAAmB,OAAO,EAAE;IAEnD,IAAI,CAAC,UAAU;QACX,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IACX;IAEA,qBAAO,8OAAC,oJAAA,CAAA,mBAAgB;QAAC,UAAU;;;;;;AACvC","debugId":null}}]
}