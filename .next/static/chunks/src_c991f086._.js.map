{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,6KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/chat/ChatWindow.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useRef, useEffect, useCallback } from 'react';\nimport type { Message, UserProfile } from '@/types';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { Send, Loader2 } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { chatAssistant } from '@/ai/flows/chat-assistant';\nimport { useTranslation } from '@/hooks/useTranslation';\nimport { useAuth } from '@/context/AuthContext';\nimport { format } from 'date-fns';\n\ninterface ChatWindowProps {\n  conversationId: string;\n  recipient: UserProfile;\n}\n\nexport function ChatWindow({ conversationId, recipient }: ChatWindowProps) {\n  const { user: authUser, supabase } = useAuth();\n  const [messages, setMessages] = useState<Message[]>([]);\n  const { t, locale } = useTranslation();\n  \n  const [newMessage, setNewMessage] = useState('');\n  const [isSending, setIsSending] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const scrollAreaRef = useRef<HTMLDivElement>(null);\n\n  const scrollToBottom = useCallback(() => {\n    setTimeout(() => {\n       if (scrollAreaRef.current) {\n        const viewport = scrollAreaRef.current.querySelector('div[data-radix-scroll-area-viewport]');\n        if (viewport) {\n          viewport.scrollTop = viewport.scrollHeight;\n        }\n      }\n    }, 100);\n  }, []);\n  \n  useEffect(() => {\n    const fetchMessages = async () => {\n        if (!conversationId || !supabase) return;\n        setIsLoading(true);\n\n        const { data, error } = await supabase\n            .from('messages')\n            .select('*')\n            .eq('conversation_id', conversationId)\n            .order('created_at', { ascending: true });\n\n        if (error) {\n            console.error(\"Error fetching messages:\", error);\n            setMessages([]);\n        } else {\n            const formattedMessages: Message[] = data.map(m => ({\n                id: m.id.toString(),\n                text: m.content,\n                sender: m.sender_id === authUser?.id ? 'buyer' : 'seller', // Simplified assumption\n                timestamp: format(new Date(m.created_at), 'p')\n            }));\n            setMessages(formattedMessages);\n        }\n        setIsLoading(false);\n    }\n    fetchMessages();\n  }, [conversationId, supabase, authUser?.id]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, scrollToBottom]);\n  \n  useEffect(() => {\n      if (!supabase || !conversationId) return;\n\n      const channel = supabase.channel(`chat:${conversationId}`)\n        .on('postgres_changes', { event: 'INSERT', schema: 'public', table: 'messages', filter: `conversation_id=eq.${conversationId}` }, \n        (payload) => {\n            const newMessage = payload.new as any;\n            const formattedMessage: Message = {\n                id: newMessage.id.toString(),\n                text: newMessage.content,\n                sender: newMessage.sender_id === authUser?.id ? 'buyer' : 'seller',\n                timestamp: format(new Date(newMessage.created_at), 'p')\n            }\n            setMessages(currentMessages => [...currentMessages, formattedMessage]);\n        })\n        .subscribe();\n      \n      return () => {\n        supabase.removeChannel(channel);\n      }\n\n  }, [supabase, conversationId, authUser?.id]);\n\n\n  const handleSendMessage = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!newMessage.trim() || !authUser || !supabase) return;\n\n    setIsSending(true);\n\n    const textToSend = newMessage;\n    setNewMessage(''); // Clear input immediately for better UX\n\n    const { error } = await supabase\n      .from('messages')\n      .insert({\n        conversation_id: conversationId,\n        sender_id: authUser.id,\n        content: textToSend,\n      });\n\n    if (error) {\n        console.error(\"Error sending message:\", error);\n        toast({ title: \"Error\", description: \"Could not send message.\", variant: \"destructive\" });\n        setNewMessage(textToSend); // Restore message on error\n    }\n    \n    setIsSending(false);\n  };\n  \n  const getAvatar = (sender: 'buyer' | 'seller') => {\n    return sender === 'buyer' ? authUser?.user_metadata.avatar_url : recipient.avatar_url;\n  };\n\n  const getInitial = (sender: 'buyer' | 'seller') => {\n    const name = sender === 'buyer' ? authUser?.user_metadata.full_name : recipient.full_name;\n    return name ? name.charAt(0).toUpperCase() : 'U';\n  }\n\n  if (isLoading) {\n    return (\n        <div className=\"flex justify-center items-center h-full\">\n            <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n        </div>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      <ScrollArea className=\"flex-grow p-4 pr-2\" ref={scrollAreaRef}>\n        <div className=\"space-y-4\">\n          {messages.map((message) => (\n            <div\n              key={message.id}\n              className={cn(\n                'flex items-end gap-2',\n                message.sender === 'buyer' ? 'justify-end' : 'justify-start'\n              )}\n            >\n              {message.sender === 'seller' && (\n                <Avatar className=\"h-8 w-8\">\n                  <AvatarImage src={getAvatar('seller') || undefined} />\n                  <AvatarFallback>{getInitial('seller')}</AvatarFallback>\n                </Avatar>\n              )}\n              <div\n                className={cn(\n                  'max-w-xs rounded-lg p-3 text-sm',\n                  message.sender === 'buyer'\n                    ? 'bg-primary text-primary-foreground'\n                    : 'bg-muted'\n                )}\n              >\n                <p>{message.text}</p>\n                <p className=\"text-xs opacity-70 mt-1 text-right\">{message.timestamp}</p>\n              </div>\n              {message.sender === 'buyer' && (\n                <Avatar className=\"h-8 w-8\">\n                  <AvatarImage src={getAvatar('buyer') || undefined} />\n                  <AvatarFallback>{getInitial('buyer')}</AvatarFallback>\n                </Avatar>\n              )}\n            </div>\n          ))}\n          {isSending && (\n             <div className=\"flex items-end gap-2 justify-start\">\n                <Avatar className=\"h-8 w-8\">\n                  <AvatarImage src={getAvatar('buyer') || undefined} />\n                  <AvatarFallback>{getInitial('buyer')}</AvatarFallback>\n                </Avatar>\n                 <div className=\"bg-muted rounded-lg p-3 flex items-center\">\n                    <Loader2 className=\"h-5 w-5 animate-spin text-muted-foreground\" />\n                 </div>\n             </div>\n          )}\n        </div>\n      </ScrollArea>\n      <form\n        onSubmit={handleSendMessage}\n        className=\"flex items-center gap-2 border-t p-4\"\n      >\n        <Input\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          placeholder={t('chat.placeholder')}\n          autoComplete=\"off\"\n          disabled={isSending}\n        />\n        <Button type=\"submit\" size=\"icon\" disabled={isSending || !newMessage.trim()}>\n          <Send className=\"h-4 w-4\" />\n        </Button>\n      </form>\n    </div>\n  );\n}\n\n// Dummy toast for now\nconst toast = (props: any) => console.log('Toast:', props.title);\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 466, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 569, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28main%29/messages/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { ChatWindow } from '@/components/chat/ChatWindow';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { Card } from '@/components/ui/card';\nimport { Loader2, MessageCircle, MessagesSquare } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport type { Conversation, ConversationFromDB } from '@/types';\nimport { useChatStore } from '@/components/chat/use-chat-store';\nimport Link from 'next/link';\nimport { useTranslation } from '@/hooks/useTranslation';\nimport { useAuth } from '@/context/AuthContext';\nimport { formatDistanceToNow } from 'date-fns';\nimport { es, enUS } from 'date-fns/locale';\n\nexport default function MessagesPage() {\n  const { user, loading: authLoading, supabase } = useAuth();\n  const { conversations, selectedConversation, selectConversation, setConversations, updateConversation } = useChatStore();\n  const { t, locale } = useTranslation();\n  const [loading, setLoading] = useState(true);\n\n  const fetchAndSetConversations = async () => {\n      if (!user || !supabase) return;\n\n      setLoading(true);\n\n      const { data, error } = await supabase\n        .from('conversations')\n        .select(`\n          id,\n          created_at,\n          property_id,\n          buyer_id,\n          seller_id,\n          last_message_sender_id,\n          last_message_read,\n          property:properties(id, title, images),\n          buyer:profiles!conversations_buyer_id_fkey(user_id, full_name, avatar_url),\n          seller:profiles!conversations_seller_id_fkey(user_id, full_name, avatar_url),\n          messages(content, created_at, sender_id)\n        `)\n        .or(`buyer_id.eq.${user.id},seller_id.eq.${user.id}`)\n        .order('created_at', { referencedTable: 'messages', ascending: false });\n\n      if (error) {\n        console.error(\"Error fetching conversations:\", error);\n      } else {\n        const transformedConversations = data.map(convo => {\n            const otherUser = convo.buyer_id === user.id ? convo.seller : convo.buyer;\n            const lastMessage = convo.messages[0];\n            return {\n                id: convo.id.toString(),\n                user: {\n                    user_id: otherUser.user_id,\n                    full_name: otherUser.full_name,\n                    avatar_url: otherUser.avatar_url,\n                    username: null\n                },\n                property: {\n                    ...mockProperty,\n                    id: convo.property?.id || \"unknown\",\n                    title: convo.property?.title || \"Conversation\",\n                    images: convo.property?.images || []\n                },\n                messages: [],\n                timestamp: lastMessage ? lastMessage.created_at : convo.created_at,\n                lastMessage: lastMessage?.content || \"No messages yet.\",\n                unread: !convo.last_message_read && convo.last_message_sender_id !== user.id\n            }\n        });\n        setConversations(transformedConversations);\n      }\n      setLoading(false);\n    };\n\n  useEffect(() => {\n    if (!authLoading) {\n        fetchAndSetConversations();\n    }\n  }, [user, authLoading, supabase, setConversations]);\n  \n  useEffect(() => {\n    if (!supabase || !user) return;\n\n    const conversationsChannel = supabase.channel('public:conversations')\n        .on('postgres_changes', \n            { event: '*', schema: 'public', table: 'conversations' },\n            (payload) => {\n                // When a conversation is updated (e.g., last_message_read changes), refetch all.\n                // This is a simple way to ensure the UI is consistent.\n                fetchAndSetConversations();\n            }\n        )\n        .subscribe();\n    \n    return () => {\n        supabase.removeChannel(conversationsChannel);\n    };\n  }, [supabase, user]);\n\n  const getTimestamp = (timestamp: string) => {\n    const date = new Date(timestamp);\n    return formatDistanceToNow(date, { addSuffix: true, locale: locale === 'es' ? es : enUS });\n  }\n\n  if (loading || authLoading) {\n     return (\n        <div className=\"flex justify-center items-center min-h-[calc(100vh-8rem)]\">\n            <Loader2 className=\"h-16 w-16 animate-spin text-primary\" />\n        </div>\n    );\n  }\n\n  if (conversations.length === 0) {\n    return (\n      <div className=\"text-center py-24 bg-card rounded-xl border border-dashed flex flex-col items-center container mx-auto mt-8\">\n        <MessagesSquare className=\"w-16 h-16 text-muted-foreground/50 mb-4\" />\n        <h2 className=\"text-2xl font-semibold mb-2 text-primary\">\n          {t('messages.empty.title')}\n        </h2>\n        <p className=\"text-muted-foreground mb-6\">\n          {t('messages.empty.description')}\n        </p>\n         <Link href=\"/\">\n            <div className='text-primary hover:underline'>{t('messages.empty.button')}</div>\n          </Link>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto py-8\">\n       <div className=\"mb-8\">\n        <h1 className=\"font-headline text-4xl font-bold text-primary mb-2\">\n          {t('messages.title')}\n        </h1>\n        <p className=\"text-lg text-muted-foreground\">\n          {t('messages.subtitle')}\n        </p>\n      </div>\n      <Card className=\"h-[calc(100vh-18rem)] flex overflow-hidden\">\n        <div className=\"w-1/3 border-r overflow-y-auto\">\n          <div className=\"p-4 font-semibold border-b\">\n            {t('messages.allMessages')} ({conversations.length})\n          </div>\n          <nav className=\"p-2 space-y-1\">\n            {conversations.map((convo) => (\n              <button\n                key={convo.id}\n                onClick={() => selectConversation(convo.id)}\n                className={cn(\n                  \"w-full text-left p-3 rounded-lg flex items-start gap-3 transition-colors\",\n                  selectedConversation?.id === convo.id ? \"bg-muted\" : \"hover:bg-muted/50\"\n                )}\n              >\n                <Link href={`/profile/${convo.user.user_id}`} onClick={(e) => e.stopPropagation()}>\n                    <Avatar className=\"h-10 w-10 hover:ring-2 hover:ring-primary transition-all\">\n                      <AvatarImage src={convo.user.avatar_url || undefined} />\n                      <AvatarFallback>{convo.user.full_name?.charAt(0)}</AvatarFallback>\n                    </Avatar>\n                </Link>\n                <div className=\"flex-grow overflow-hidden\">\n                   <div className=\"flex justify-between items-center\">\n                    <Link href={`/profile/${convo.user.user_id}`} onClick={(e) => e.stopPropagation()}>\n                        <p className=\"font-semibold text-sm truncate hover:underline\">{convo.user.full_name}</p>\n                    </Link>\n                     <p className=\"text-xs text-muted-foreground flex-shrink-0\">{getTimestamp(convo.timestamp)}</p>\n                   </div>\n                    <p className=\"text-xs text-muted-foreground truncate\">\n                        {t('messages.re')} {t(convo.property.title)}\n                    </p>\n                   <p className=\"text-sm text-muted-foreground truncate\">{ (convo as any).lastMessage }</p>\n                </div>\n                 {convo.unread && <div className=\"w-2 h-2 rounded-full bg-primary mt-1 flex-shrink-0\"></div>}\n              </button>\n            ))}\n          </nav>\n        </div>\n        <div className=\"w-2/3 flex flex-col\">\n          {selectedConversation ? (\n            <ChatWindow\n              key={selectedConversation.id}\n              conversationId={selectedConversation.id}\n              recipient={selectedConversation.user}\n            />\n          ) : (\n            <div className=\"flex flex-col items-center justify-center h-full text-center text-muted-foreground\">\n                <MessageCircle className=\"h-16 w-16 mb-4\" />\n                <h2 className=\"text-xl font-semibold\">{t('messages.select.title')}</h2>\n                <p>{t('messages.select.description')}</p>\n            </div>\n          )}\n        </div>\n      </Card>\n    </div>\n  );\n}\n\n// Mock property to satisfy the type, as not all fields are needed for the convo list\nconst mockProperty: Property = {\n    id: 'mock',\n    title: 'mock',\n    price: 0,\n    location: 'mock',\n    address: 'mock',\n    type: 'house',\n    bedrooms: 0,\n    bathrooms: 0,\n    area: 0,\n    description: 'mock',\n    features: [],\n    images: [],\n    realtor_id: 'mock',\n    realtor: { user_id: 'mock', full_name: 'mock', avatar_url: 'mock', username: 'mock' }\n}\n\n    \n"],"names":[],"mappings":"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","debugId":null}}]
}